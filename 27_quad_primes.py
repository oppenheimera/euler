from utils import prime as is_prime
from sys import argv
from itertools import permutations, chain
"""
Considering quadratics of the form:

n**2 + (a*n) + (b), where abs(a) <= 1000 and abs(b) <= 1000

Find the product of the coefficients a and b, for the quadratic 
expression that yields the maximum number of primes for consecutive 
values of n, starting with n=0
"""
BOUND = 1000
CURR_MAX = 0
A, B = 0, 0


def get_number_of_consec_primes(a, b):
    """
    returns the number of consecutive primes generated by the
    formula n**2 + a*n + b starting with 0
    """
    consec = 0
    x = 0
    f = lambda x: x**2 + a*x + b
    try:
        while (is_prime(f(x))):
            consec += 1
            x += 1
    except Exception as e:
        pass
    return consec

if argv[-1].lower() == 'debug':
    assert get_number_of_consec_primes(1,41) == 40
    assert get_number_of_consec_primes(-79,1601) == 80

for a, b in permutations(chain(range(-1001,0), range(1,1001)), r=2):
        m = get_number_of_consec_primes(a,b) 
        if m > CURR_MAX:
            print(m)
            CURR_MAX = m
            A, B = a, b

print("The magic fucking formula is n**2 + {}*n + {}, yielding {} consecutive primes".format(A, B, CURR_MAX)) 
